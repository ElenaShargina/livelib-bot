Экспорт данных с сайта livelib.ru
У популярного сайта для учета прочитанных книг livelib.ru нет собственной функции экспорта или открытого API для экспорта данных. Проект решает эту проблему, позволяя получить свои прочитанные книги в файле формата xlsx.

# Проблемы:
- сайт livelib.ru не обладает открытым API, поэтому нужен парсинг html-страниц;
- сайт livelib.ru ставит защиту от частых запросов (капча или просто сброс), поэтому генерировать запросы приходится с задержкой;
- для частичного решения этой проблемы запрошенные книги сохраняются в базе данных и предоставляется возможность скачать их оттуда без новых запросов к сайту.

# Версия 1.0
- проверяет, существует ли читатель с заданным логином
- загружает прочитанные читателем книги в локальной БД
- экспортирует прочитанные читателем книги в xlsx формате

# Использование
- Пример использования пакета приведен в model.py.

# Структура проекта:
/cache/ папка для хранения кеша страниц
/db/ - папка для хранения БД
/export/ - папка для хранения созданных файлов с экспортированными данными
/livelib/ - пакет livelib tests/ - папка с юнит-тестами пакета, в ней содержатся необходимые тестовые данные (файлы, базы данных)
/uml-diagrams/ - папка с некоторыми uml-диаграммами, относящимися к проекту

log.log - файл лога
model.py - демонстрация работы пакета
README.txt - текущий файл
requirements.txt - файл с версиями необходимых пакетов Python

.github/workflows - для ГитХаба прописано автоматическое тестирование пакета с помощью unit tests при каждом пуше.

# Структура классов

    Reader - основной класс
    Config - класс для загрузки конфигурации
    WebConnection - классы для соединения с веб
        SimpleWeb(WebConnection) - класс для соединения с веб напрямую
        WebWithCache(WebConnection) - класс для соединения с веб с кешированием данных
    DBConnection - классы для соединения с базой данных
        SQLite3Connection(DBConnection) - класс для соединения с базой данных sqlite3
    Export - классы для экспорта
        XLSXExport(Export) - класс для экспорта данных в формате xlsx
    Parser - классы для парсинга данных
        ParserFromHTML(Parser) - класс для парсинга страниц сайта в формате html
        ParserForDB(Parser) - класс для подготовки данных для сохранения в БД
        ParserForXLSX(Parser) - класс для подготовки данных для сохранения в XLSX
    DataFormatter - класс задания соответствий между свойствами свойств на сайте (парсинг HTML)
                    и колонок в БД и XLSX
        BookDataFormatter(DataFormatter) - класс задания соответствий
                                            между свойствами книг на сайте и колонок в БД и XLSX


# Требования
Требуемые пакеты перечислены в requirements.txt

# Тестирование
Проект покрыт юнит-тестами из папки livelib/tests. При пуше на github они запускаются автоматически.

# В следующих версиях
добавить экспорт в csv формат
добавить прикрепление ISBN (требует парсинга дополнительных страниц сайта)
добавить экспорт в формате, подходящим для импорта на BookMate
добавить экспорт книг из виш-листа
расширение сценариев использования:
